167. Two Sum II - Input array is sorted


Input: numbers = [2,7,11,15], target = 9
Output: [1,2]
Explanation: The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.
Example 2:

Input: numbers = [2,3,4], target = 6
Output: [1,3]
Explanation: The sum of 2 and 4 is 6. Therefore index1 = 1, index2 = 3.

HashMap

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        HashMap<Integer,Integer> m = new HashMap<Integer,Integer>();
        int[] result = new int[2];
        for(int i=0;i<numbers.length;i++)
        {
            if(m.containsKey(target-numbers[i]))
            {
               
                result[0]=m.get(target-numbers[i])+1;
                result[1]=i+1;
            }
            else
            {
                m.put(numbers[i],i);
            }
        }
        return result;
    }
}
two pointers

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int start =0;
        int end = numbers.length-1;
        int[] res = new int[2];
          while(start<end)
            {
                if(numbers[start]+numbers[end]==target)
                {
                    res[0]= start+1;
                    res[1]=end+1;
                    break;
                }
               else if(numbers[start]+numbers[end]>target){
                end--;
            }
            else{
                start++;
            }
        }
        return res;
    }
}


